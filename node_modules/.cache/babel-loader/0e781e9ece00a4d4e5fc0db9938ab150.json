{"ast":null,"code":"import _slicedToArray from\"/Users/sanarukhsar/Desktop/developerFolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,createRef}from\"react\";import\"./ExperienceCard.css\";import ColorThief from\"colorthief\";export default function ExperienceCard(_ref){var cardInfo=_ref.cardInfo;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),colorArrays=_useState2[0],setColorArrays=_useState2[1];var imgRef=createRef();function getColorArrays(){var colorThief=new ColorThief();setColorArrays(colorThief.getColor(imgRef.current));}function rgb(values){return typeof values===\"undefined\"?null:\"rgb(\"+values.join(', ')+\")\";}var GetDescBullets=function GetDescBullets(_ref2){var descBullets=_ref2.descBullets;return descBullets?descBullets.map(function(item){return React.createElement(\"li\",{className:\"subTitle-exp\"},item);}):null;};return React.createElement(\"div\",{className:\"experience-card\"},React.createElement(\"div\",{style:{background:rgb(colorArrays)},className:\"experience-banner\"},React.createElement(\"div\",{className:\"experience-blurred_div\"}),React.createElement(\"div\",{className:\"experience-div-company\"},React.createElement(\"h5\",{className:\"experience-text-company\"},cardInfo.company)),React.createElement(\"img\",{crossOrigin:\"anonymous\",ref:imgRef,className:\"experience-roundedimg\",src:cardInfo.companylogo,alt:cardInfo.company,onLoad:function onLoad(){return getColorArrays();}})),React.createElement(\"div\",{className:\"experience-text-details\"},React.createElement(\"h5\",{className:\"experience-text-role\"},cardInfo.role),React.createElement(\"h5\",{className:\"experience-text-date\"},cardInfo.date),React.createElement(\"p\",{className:\"subTitle experience-text-desc\"},cardInfo.desc),React.createElement(\"ul\",null,React.createElement(GetDescBullets,{descBullets:cardInfo.descBullets}))));}","map":{"version":3,"sources":["/Users/sanarukhsar/Desktop/developerFolio/src/components/experienceCard/ExperienceCard.js"],"names":["React","useState","useEffect","createRef","ColorThief","ExperienceCard","cardInfo","colorArrays","setColorArrays","imgRef","getColorArrays","colorThief","getColor","current","rgb","values","join","GetDescBullets","descBullets","map","item","background","company","companylogo","role","date","desc"],"mappings":"4HAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,SAArC,KAAsD,OAAtD,CACA,MAAO,sBAAP,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA,cAAe,SAASC,CAAAA,cAAT,MAAsC,IAAZC,CAAAA,QAAY,MAAZA,QAAY,eACbL,QAAQ,CAAC,EAAD,CADK,wCAC5CM,WAD4C,eAC/BC,cAD+B,eAEnD,GAAMC,CAAAA,MAAM,CAAGN,SAAS,EAAxB,CAEA,QAASO,CAAAA,cAAT,EAA0B,CACxB,GAAMC,CAAAA,UAAU,CAAG,GAAIP,CAAAA,UAAJ,EAAnB,CACAI,cAAc,CAACG,UAAU,CAACC,QAAX,CAAoBH,MAAM,CAACI,OAA3B,CAAD,CAAd,CACD,CAED,QAASC,CAAAA,GAAT,CAAaC,MAAb,CAAqB,CACnB,MAAO,OAAOA,CAAAA,MAAP,GAAkB,WAAlB,CAAgC,IAAhC,CAAuC,OAASA,MAAM,CAACC,IAAP,CAAY,IAAZ,CAAT,CAA6B,GAA3E,CACD,CAED,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,OAAqB,IAAlBC,CAAAA,WAAkB,OAAlBA,WAAkB,CAC1C,MAAOA,CAAAA,WAAW,CAAGA,WAAW,CAACC,GAAZ,CAAgB,SAACC,IAAD,QAAU,2BAAI,SAAS,CAAC,cAAd,EAA8BA,IAA9B,CAAV,EAAhB,CAAH,CAAyE,IAA3F,CACD,CAFD,CAIA,MACE,4BAAK,SAAS,CAAC,iBAAf,EACE,2BAAK,KAAK,CAAE,CAACC,UAAU,CAAEP,GAAG,CAACP,WAAD,CAAhB,CAAZ,CAA6C,SAAS,CAAC,mBAAvD,EACE,2BAAK,SAAS,CAAC,wBAAf,EADF,CAEE,2BAAK,SAAS,CAAC,wBAAf,EACE,0BAAI,SAAS,CAAC,yBAAd,EAAyCD,QAAQ,CAACgB,OAAlD,CADF,CAFF,CAME,2BAAK,WAAW,CAAE,WAAlB,CAA+B,GAAG,CAAEb,MAApC,CAA4C,SAAS,CAAC,uBAAtD,CAA8E,GAAG,CAAEH,QAAQ,CAACiB,WAA5F,CAAyG,GAAG,CAAEjB,QAAQ,CAACgB,OAAvH,CAAgI,MAAM,CAAE,wBAAMZ,CAAAA,cAAc,EAApB,EAAxI,EANF,CADF,CASE,2BAAK,SAAS,CAAC,yBAAf,EACE,0BAAI,SAAS,CAAC,sBAAd,EAAsCJ,QAAQ,CAACkB,IAA/C,CADF,CAEE,0BAAI,SAAS,CAAC,sBAAd,EAAsClB,QAAQ,CAACmB,IAA/C,CAFF,CAGE,yBAAG,SAAS,CAAC,+BAAb,EAA8CnB,QAAQ,CAACoB,IAAvD,CAHF,CAIE,8BACE,oBAAC,cAAD,EAAgB,WAAW,CAAEpB,QAAQ,CAACY,WAAtC,EADF,CAJF,CATF,CADF,CAoBD","sourcesContent":["import React, { useState, useEffect, createRef } from \"react\";\nimport \"./ExperienceCard.css\";\nimport ColorThief from \"colorthief\";\n\nexport default function ExperienceCard({ cardInfo }) {\n  const [colorArrays, setColorArrays] = useState([]);\n  const imgRef = createRef();\n\n  function getColorArrays() {\n    const colorThief = new ColorThief();\n    setColorArrays(colorThief.getColor(imgRef.current));\n  }\n\n  function rgb(values) {\n    return typeof values === \"undefined\" ? null : \"rgb(\" + values.join(', ') + \")\";\n  }\n\n  const GetDescBullets = ({ descBullets }) => {\n    return descBullets ? descBullets.map((item) => <li className=\"subTitle-exp\">{item}</li>) : null\n  };\n\n  return (\n    <div className=\"experience-card\">\n      <div style={{background: rgb(colorArrays) }} className=\"experience-banner\">\n        <div className=\"experience-blurred_div\"></div>\n        <div className=\"experience-div-company\">\n          <h5 className=\"experience-text-company\">{cardInfo.company}</h5>\n        </div>\n        \n        <img crossOrigin={\"anonymous\"} ref={imgRef} className=\"experience-roundedimg\" src={cardInfo.companylogo} alt={cardInfo.company} onLoad={() => getColorArrays()}/>\n      </div>\n      <div className=\"experience-text-details\">\n        <h5 className=\"experience-text-role\">{cardInfo.role}</h5>\n        <h5 className=\"experience-text-date\">{cardInfo.date}</h5>\n        <p className=\"subTitle experience-text-desc\">{cardInfo.desc}</p>\n        <ul>\n          <GetDescBullets descBullets={cardInfo.descBullets} />\n        </ul>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}