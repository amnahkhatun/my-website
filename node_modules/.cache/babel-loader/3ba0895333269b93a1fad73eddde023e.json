{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/sanarukhsar/Desktop/developerFolio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/Users/sanarukhsar/Desktop/developerFolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n        {\\n        user(login: \\\"\",\"\\\") {\\n          pinnedItems(first: 6, types: [REPOSITORY]) {\\n            totalCount\\n            edges {\\n              node {\\n                ... on Repository {\\n                  name\\n                  description\\n                  forkCount\\n                  stargazers {\\n                    totalCount\\n                  }\\n                  url\\n                  id\\n                  diskUsage\\n                  primaryLanguage {\\n                    name\\n                    color\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n        \"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect}from\"react\";import ApolloClient from\"apollo-boost\";import{gql}from\"apollo-boost\";import\"./Project.css\";import GithubRepoCard from\"../../components/githubRepoCard/GithubRepoCard\";import Button from\"../../components/button/Button\";import{openSource,socialMediaLinks}from\"../../portfolio\";import{Fade}from\"react-reveal\";export default function Projects(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),repo=_useState2[0],setrepo=_useState2[1];useEffect(function(){getRepoData();},[]);function getRepoData(){var client=new ApolloClient({uri:\"https://api.github.com/graphql\",request:function request(operation){operation.setContext({headers:{authorization:\"Bearer \".concat(openSource.githubConvertedToken)}});}});client.query({query:gql(_templateObject(),openSource.githubUserName)}).then(function(result){setrepoFunction(result.data.user.pinnedItems.edges);console.log(result);});}function setrepoFunction(array){setrepo(array);}return React.createElement(Fade,{bottom:true,duration:1000,distance:\"20px\"},React.createElement(\"div\",{className:\"main\",id:\"opensource\"},React.createElement(\"h1\",{className:\"project-title\"},\"Open Source Projects\"),React.createElement(\"div\",{className:\"repo-cards-div-main\"},repo.map(function(v,i){return React.createElement(GithubRepoCard,{repo:v,key:v.node.id});})),React.createElement(Button,{text:\"More Projects\",className:\"project-button\",href:socialMediaLinks.github,newTab:true})));}","map":{"version":3,"sources":["/Users/sanarukhsar/Desktop/developerFolio/src/containers/projects/Projects.js"],"names":["React","useState","useEffect","ApolloClient","gql","GithubRepoCard","Button","openSource","socialMediaLinks","Fade","Projects","repo","setrepo","getRepoData","client","uri","request","operation","setContext","headers","authorization","githubConvertedToken","query","githubUserName","then","result","setrepoFunction","data","user","pinnedItems","edges","console","log","array","map","v","i","node","id","github"],"mappings":"0hCAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,YAAP,KAAyB,cAAzB,CACA,OAASC,GAAT,KAAoB,cAApB,CACA,MAAO,eAAP,CACA,MAAOC,CAAAA,cAAP,KAA2B,gDAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,gCAAnB,CACA,OAASC,UAAT,CAAqBC,gBAArB,KAA6C,iBAA7C,CACA,OAASC,IAAT,KAAqB,cAArB,CAEA,cAAe,SAASC,CAAAA,QAAT,EAAoB,eACTT,QAAQ,CAAC,EAAD,CADC,wCAC1BU,IAD0B,eACpBC,OADoB,eAGjCV,SAAS,CAAC,UAAM,CACdW,WAAW,GACZ,CAFQ,CAEN,EAFM,CAAT,CAIA,QAASA,CAAAA,WAAT,EAAuB,CACrB,GAAMC,CAAAA,MAAM,CAAG,GAAIX,CAAAA,YAAJ,CAAiB,CAC9BY,GAAG,CAAE,gCADyB,CAE9BC,OAAO,CAAE,iBAACC,SAAD,CAAe,CACtBA,SAAS,CAACC,UAAV,CAAqB,CACnBC,OAAO,CAAE,CACPC,aAAa,kBAAYb,UAAU,CAACc,oBAAvB,CADN,CADU,CAArB,EAKD,CAR6B,CAAjB,CAAf,CAWAP,MAAM,CACHQ,KADH,CACS,CACLA,KAAK,CAAElB,GAAF,mBAEUG,UAAU,CAACgB,cAFrB,CADA,CADT,EA+BGC,IA/BH,CA+BQ,SAACC,MAAD,CAAY,CAChBC,eAAe,CAACD,MAAM,CAACE,IAAP,CAAYC,IAAZ,CAAiBC,WAAjB,CAA6BC,KAA9B,CAAf,CACAC,OAAO,CAACC,GAAR,CAAYP,MAAZ,EACD,CAlCH,EAmCD,CAED,QAASC,CAAAA,eAAT,CAAyBO,KAAzB,CAAgC,CAC9BrB,OAAO,CAACqB,KAAD,CAAP,CACD,CAED,MACE,qBAAC,IAAD,EAAM,MAAM,KAAZ,CAAa,QAAQ,CAAE,IAAvB,CAA6B,QAAQ,CAAC,MAAtC,EACE,2BAAK,SAAS,CAAC,MAAf,CAAsB,EAAE,CAAC,YAAzB,EACE,0BAAI,SAAS,CAAC,eAAd,yBADF,CAEE,2BAAK,SAAS,CAAC,qBAAf,EACGtB,IAAI,CAACuB,GAAL,CAAS,SAACC,CAAD,CAAIC,CAAJ,CAAU,CAClB,MAAO,qBAAC,cAAD,EAAgB,IAAI,CAAED,CAAtB,CAAyB,GAAG,CAAEA,CAAC,CAACE,IAAF,CAAOC,EAArC,EAAP,CACD,CAFA,CADH,CAFF,CAOE,oBAAC,MAAD,EAAQ,IAAI,CAAE,eAAd,CAA+B,SAAS,CAAC,gBAAzC,CAA0D,IAAI,CAAE9B,gBAAgB,CAAC+B,MAAjF,CAAyF,MAAM,CAAE,IAAjG,EAPF,CADF,CADF,CAaD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { gql } from \"apollo-boost\";\nimport \"./Project.css\";\nimport GithubRepoCard from \"../../components/githubRepoCard/GithubRepoCard\";\nimport Button from \"../../components/button/Button\";\nimport { openSource, socialMediaLinks } from \"../../portfolio\";\nimport { Fade } from \"react-reveal\";\n\nexport default function Projects() {\n  const [repo, setrepo] = useState([]);\n\n  useEffect(() => {\n    getRepoData();\n  }, []);\n\n  function getRepoData() {\n    const client = new ApolloClient({\n      uri: \"https://api.github.com/graphql\",\n      request: (operation) => {\n        operation.setContext({\n          headers: {\n            authorization: `Bearer ${openSource.githubConvertedToken}`,\n          },\n        });\n      },\n    });\n\n    client\n      .query({\n        query: gql`\n        {\n        user(login: \"${openSource.githubUserName}\") {\n          pinnedItems(first: 6, types: [REPOSITORY]) {\n            totalCount\n            edges {\n              node {\n                ... on Repository {\n                  name\n                  description\n                  forkCount\n                  stargazers {\n                    totalCount\n                  }\n                  url\n                  id\n                  diskUsage\n                  primaryLanguage {\n                    name\n                    color\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n        `,\n      })\n      .then((result) => {\n        setrepoFunction(result.data.user.pinnedItems.edges);\n        console.log(result);\n      });\n  }\n\n  function setrepoFunction(array) {\n    setrepo(array);\n  }\n\n  return (\n    <Fade bottom duration={1000} distance=\"20px\">\n      <div className=\"main\" id=\"opensource\">\n        <h1 className=\"project-title\">Open Source Projects</h1>\n        <div className=\"repo-cards-div-main\">\n          {repo.map((v, i) => {\n            return <GithubRepoCard repo={v} key={v.node.id} />;\n          })}\n        </div>\n        <Button text={\"More Projects\"} className=\"project-button\" href={socialMediaLinks.github} newTab={true} />\n      </div>\n    </Fade>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}