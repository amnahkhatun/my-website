{"ast":null,"code":"import _slicedToArray from \"/Users/sanarukhsar/Desktop/developerFolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sanarukhsar/Desktop/developerFolio/src/containers/projects/Projects.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { gql } from \"apollo-boost\";\nimport \"./Project.css\";\nimport GithubRepoCard from \"../../components/githubRepoCard/GithubRepoCard\";\nimport Button from \"../../components/button/Button\";\nimport { socialMediaLinks } from \"../../portfolio\";\nimport { Fade } from \"react-reveal\";\nexport default function Projects() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        repo = _useState2[0],\n        setrepo = _useState2[1]; // useEffect(() => {\n  //   getRepoData();\n  // }, []);\n  // function getRepoData() {\n  //   const client = new ApolloClient({\n  //     uri: \"https://api.github.com/graphql\",\n  //     request: (operation) => {\n  //       operation.setContext({\n  //         headers: {\n  //           authorization: `Bearer ${openSource.githubConvertedToken}`,\n  //         },\n  //       });\n  //     },\n  //   });\n  //   client\n  //     .query({\n  //       query: gql`\n  //       {\n  //       user(login: \"${openSource.githubUserName}\") {\n  //         pinnedItems(first: 6, types: [REPOSITORY]) {\n  //           totalCount\n  //           edges {\n  //             node {\n  //               ... on Repository {\n  //                 name\n  //                 description\n  //                 forkCount\n  //                 stargazers {\n  //                   totalCount\n  //                 }\n  //                 url\n  //                 id\n  //                 diskUsage\n  //                 primaryLanguage {\n  //                   name\n  //                   color\n  //                 }\n  //               }\n  //             }\n  //           }\n  //         }\n  //       }\n  //     }\n  //       `,\n  //     })\n  //     .then((result) => {\n  //       setrepoFunction(result.data.user.pinnedItems.edges);\n  //       console.log(result);\n  //     });\n  // }\n\n\n  function setrepoFunction(array) {\n    setrepo(array);\n  }\n\n  return React.createElement(Fade, {\n    bottom: true,\n    duration: 1000,\n    distance: \"20px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"main\",\n    id: \"opensource\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"project-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Open Source Projects\"), React.createElement(\"div\", {\n    className: \"repo-cards-div-main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, repo.map((v, i) => {\n    return React.createElement(GithubRepoCard, {\n      repo: v,\n      key: v.node.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    });\n  })), React.createElement(Button, {\n    text: \"More Projects\",\n    className: \"project-button\",\n    href: socialMediaLinks.github,\n    newTab: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/sanarukhsar/Desktop/developerFolio/src/containers/projects/Projects.js"],"names":["React","useState","useEffect","ApolloClient","gql","GithubRepoCard","Button","socialMediaLinks","Fade","Projects","repo","setrepo","setrepoFunction","array","map","v","i","node","id","github"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAO,eAAP;AACA,OAAOC,cAAP,MAA2B,gDAA3B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,SAASC,IAAT,QAAqB,cAArB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA,oBACTR,QAAQ,CAAC,EAAD,CADC;AAAA;AAAA,QAC1BS,IAD0B;AAAA,QACpBC,OADoB,kBAGjC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9BF,IAAAA,OAAO,CAACE,KAAD,CAAP;AACD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAa,IAAA,QAAQ,EAAE,IAAvB;AAA6B,IAAA,QAAQ,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,EAAE,EAAC,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,CAACI,GAAL,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClB,WAAO,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAED,CAAtB;AAAyB,MAAA,GAAG,EAAEA,CAAC,CAACE,IAAF,CAAOC,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CADH,CAFF,EAOE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,eAAd;AAA+B,IAAA,SAAS,EAAC,gBAAzC;AAA0D,IAAA,IAAI,EAAEX,gBAAgB,CAACY,MAAjF;AAAyF,IAAA,MAAM,EAAE,IAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CADF;AAaD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { gql } from \"apollo-boost\";\nimport \"./Project.css\";\nimport GithubRepoCard from \"../../components/githubRepoCard/GithubRepoCard\";\nimport Button from \"../../components/button/Button\";\nimport { socialMediaLinks } from \"../../portfolio\";\nimport { Fade } from \"react-reveal\";\n\nexport default function Projects() {\n  const [repo, setrepo] = useState([]);\n\n  // useEffect(() => {\n  //   getRepoData();\n  // }, []);\n\n  // function getRepoData() {\n  //   const client = new ApolloClient({\n  //     uri: \"https://api.github.com/graphql\",\n  //     request: (operation) => {\n  //       operation.setContext({\n  //         headers: {\n  //           authorization: `Bearer ${openSource.githubConvertedToken}`,\n  //         },\n  //       });\n  //     },\n  //   });\n\n  //   client\n  //     .query({\n  //       query: gql`\n  //       {\n  //       user(login: \"${openSource.githubUserName}\") {\n  //         pinnedItems(first: 6, types: [REPOSITORY]) {\n  //           totalCount\n  //           edges {\n  //             node {\n  //               ... on Repository {\n  //                 name\n  //                 description\n  //                 forkCount\n  //                 stargazers {\n  //                   totalCount\n  //                 }\n  //                 url\n  //                 id\n  //                 diskUsage\n  //                 primaryLanguage {\n  //                   name\n  //                   color\n  //                 }\n  //               }\n  //             }\n  //           }\n  //         }\n  //       }\n  //     }\n  //       `,\n  //     })\n  //     .then((result) => {\n  //       setrepoFunction(result.data.user.pinnedItems.edges);\n  //       console.log(result);\n  //     });\n  // }\n\n  function setrepoFunction(array) {\n    setrepo(array);\n  }\n\n  return (\n    <Fade bottom duration={1000} distance=\"20px\">\n      <div className=\"main\" id=\"opensource\">\n        <h1 className=\"project-title\">Open Source Projects</h1>\n        <div className=\"repo-cards-div-main\">\n          {repo.map((v, i) => {\n            return <GithubRepoCard repo={v} key={v.node.id} />;\n          })}\n        </div>\n        <Button text={\"More Projects\"} className=\"project-button\" href={socialMediaLinks.github} newTab={true} />\n      </div>\n    </Fade>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}